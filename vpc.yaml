AWSTemplateFormatVersion: '2010-09-09'
Description: for vpc
Resources:
  MyVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: MyVPC

  PublicSubnet1A:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select
        - 0
        - !GetAZs ''
      VpcId: !Ref MyVPC
      MapPublicIpOnLaunch: true
      CidrBlock: 10.0.1.0/16
      Tags:
        - Key: Name
          Value: PublicSubnet1A

  AppPrivateSubnet1A:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select
        - 0
        - !GetAZs ''
      VpcId: !Ref MyVPC
      CidrBlock: 10.0.2.0/16
      Tags:
        - Key: Name
          Value: AppPrivateSubnet1A

  DataPrivateSubnet1A:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select
        - 0
        - !GetAZs ''
      VpcId: !Ref MyVPC
      CidrBlock: 10.0.4.0/16
      Tags:
        - Key: Name
          Value: DataPrivateSubnet1A

  PublicSubnet1B:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select
        - 1
        - !GetAZs ''
      VpcId: !Ref MyVPC
      CidrBlock: 10.0.5.0/16
      Tags:
        - Key: Name
          Value: PublicSubnet1B

  AppPrivateSubnet1B:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select
        - 1
        - !GetAZs ''
      VpcId: !Ref MyVPC
      CidrBlock: 10.0.6.0/16
      Tags:
        - Key: Name
          Value: AppPrivateSubnet1B

  DataPrivateSubnet2B:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select
        - 1
        - !GetAZs ''
      VpcId: !Ref MyVPC
      CidrBlock: 10.0.7.0/16
      Tags:
        - Key: Name
          Value: DataPrivateSubnet1B

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: MyVPC-IGW
  
  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref MyVPC
      InternetGatewayId: !Ref InternetGateway

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref MyVPC
      Tags:
        - Key: Name
          Value: PublicRouteTable

  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnet1ARouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet1A
      RouteTableId: !Ref PublicRouteTable

  BastionHost:
    Type: AWS::EC2::Instance
    Properties:
      KeyName: bastionpem
      ImageId: ami-0592c673f0b1e7665
      SubnetId: !Ref PublicSubnet1A
      InstanceType: t2.micro
      SecurityGroupIds:
        - !Ref BastionSG
      Tags:
        - Key: Name
          Value: BastionHost

  BastionSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable SSH access
      VpcId: !Ref MyVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 123.0.0.0/24
      Tags:
        - Key: Name
          Value: BastionHost
  
  AppInstance1A:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro
      KeyName: bastionpem
      ImageId: ami-0592c673f0b1e7665
      SubnetId: !Ref AppPrivateSubnet1A
      SecurityGroupsIds:
        - !Ref AppInstance1ASG
      Tags:
        - Key: Name
          Value: App1
  
  AppInstance1B:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro
      KeyName: bastionpem
      ImageId: ami-0592c673f0b1e7665
      SubnetId: !Ref AppPrivateSubnet1B
      SecurityGroupsIds:
        - !Ref AppInstance1BSG
      Tags:
        - Key: Name
          Value: App2
  
  
  AppInstance1ASG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: allow ssh from bastion
      VpcId: !Ref MyVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          SourceSecurityGroupId: !Ref BastionSG

  
  AppInstance1BSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: allow icmp from App1 from bastion
      VpcId: !Ref MyVPC
      SecurityGroupIngress:
        - IpProtocol: icmp
          FromPort: -1
          ToPort: -1
          SourceSecurityGroupId: !Ref AppInstance1ASG
  
  
      